# .github/workflows/auto_decode_ctool.yml
name: Auto-decode CTOOL Obfuscation

on:
  push:
    paths:
      - 'CTOOL.py.txt'
  workflow_dispatch:

jobs:
  decode:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install uncompyle6

      - name: Create decode script
        run: |
          cat > decode_ctool.py << 'EOF'
          #!/usr/bin/env python3
          import re, sys, base64, bz2, zlib, marshal, subprocess

          def extract_payload(text):
              m = re.search(r"a85decode\(\s*b['\"](.+?)['\"]\s*\)", text, re.DOTALL)
              if not m:
                  raise RuntimeError("Cannot find a85decode(...) payload")
              raw = m.group(1).encode('utf-8').decode('unicode_escape')
              return raw.encode('ascii')

          def decode_payload(payload):
              try:
                  return base64.b85decode(payload)
              except:
                  return base64.a85decode(payload, adobe=False, ignorechars=b'\\n\\r\\t ')

          def main():
              src = open('CTOOL.py.txt', encoding='utf-8').read()
              payload = extract_payload(src)
              data = decode_payload(payload)
              data = bz2.decompress(data)
              data = zlib.decompress(data)
              code_obj = marshal.loads(data)

              # write .pyc
              import importlib.util, time, struct
              magic = importlib.util.MAGIC_NUMBER
              ts = struct.pack('<I', int(time.time()))
              sz = struct.pack('<I', 0)
              body = marshal.dumps(code_obj)
              with open('decoded.pyc', 'wb') as f:
                  f.write(magic + ts + sz + body)

              # decompile
              subprocess.check_call(['uncompyle6', 'decoded.pyc', '-o', 'decoded_source.py'])

          if __name__ == '__main__':
              main()
          EOF
          chmod +x decode_ctool.py

      - name: Run decode script
        run: |
          ./decode_ctool.py

      - name: Commit decoded source
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add decoded_source.py
          git diff --quiet || git commit -m "Auto-decode CTOOL.py.txt"
          git push
