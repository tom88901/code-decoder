name: Decode CTOOL Obfuscation

on:
  push:
    paths:
      - 'CTOOL.py.txt'

jobs:
  decode:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install decompiler
        run: |
          python -m pip install --upgrade pip
          pip install uncompyle6

      - name: Decode CTOOL.py.txt
        run: |
          python - << 'EOF'
          import re, base64, bz2, zlib, marshal, sys

          # Đọc file
          src = open('CTOOL.py.txt', encoding='utf-8').read()

          # Tách payload string (hỗ trợ vừa ' vừa ")
          m = re.search(r"a85decode\(\s*b['\"](.+?)['\"]\s*\)", src, re.DOTALL)
          if not m:
              print("❌ Không tìm thấy a85decode(...).")
              sys.exit(1)
          payload_txt = m.group(1)

          # Nếu trong payload có \\n, \\t, ... thì decode escape
          payload_txt = payload_txt.encode('utf-8').decode('unicode_escape')
          payload = payload_txt.encode('ascii')  # Base85 chỉ có ASCII

          # Thử Base‑85 (RFC 1924) trước, nếu lỗi thì fallback Ascii85
          try:
              decoded = base64.b85decode(payload)
              print("✅ Dùng base64.b85decode() thành công.")
          except Exception as e1:
              print(f"⚠️ b85decode lỗi: {e1}, thử a85decode...")
              # Bỏ qua newline, tab, space
              decoded = base64.a85decode(payload, adobe=False, ignorechars=b'\n\r\t ')
              print("✅ Dùng base64.a85decode() thành công.")

          # Giải nén BZ2 → Zlib
          data = bz2.decompress(decoded)
          data = zlib.decompress(data)

          # Tạo code object và ghi .pyc
          code_obj = marshal.loads(data)
          with open('decoded.pyc', 'wb') as f:
              f.write(marshal.dumps(code_obj))

          print("✅ Đã xuất decoded.pyc")
          EOF

      - name: Decompile to source
        run: |
          uncompyle6 decoded.pyc > decoded_source.py

      - name: Commit decoded source
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add decoded_source.py
          git diff --quiet || git commit -m "Auto-decode CTOOL.py.txt"
          git push
